/* SPDX-License-Identifier: GPL-2.0-or-later */
/*
 * Copyright 2024 ROHM Semiconductors.
 *
 * Author: Matti Vaittinen <matti.vaittinen@fi.rohmeurope.com>
 */

#ifndef _MFD_BD71851_H
#define _MFD_BD71851_H

#include <linux/regmap.h>

enum {
	BD71851_BUCK1	=	0,
	BD71851_BUCK2,
	BD71851_BUCK3,
	BD71851_BUCK4,
	BD71851_BUCK5,
	BD71851_BUCK6,
	BD71851_BUCK7,
	BD71851_BUCK8,
	BD71851_LDO1,
	BD71851_LDO2,
	BD71851_LDO3,
	BD71851_LDO4,
};

/* BD71851 interrupts */
enum {
	/* INT_STAT_1 register IRQs, ADC and RTC */
	BD71851_INT_ADC_ACCUM_DONE,
	BD71851_INT_ADC_ACCUM_OVF,
	BD71851_INT_ADC_ACCUM_VAL,
	BD71851_INT_ADC_ACCUM_TW,
	BD71851_INT_ADC_POW_VAL,
	BD71851_INT_RTC0,
	BD71851_INT_RTC1,
	BD71851_INT_RTC2,

	/* BUCK reg interrupts */
	/* INT_STAT_2 IRQs */
	BD71851_INT_BUCK1_DVS_DONE,
	BD71851_INT_BUCK2_DVS_DONE,
	BD71851_INT_BUCK3_DVS_DONE,
	BD71851_INT_BUCK4_DVS_DONE,
	BD71851_INT_BUCK5_DVS_DONE,
	BD71851_INT_BUCK6_DVS_DONE,
	BD71851_INT_BUCK7_DVS_DONE,
	BD71851_INT_BUCK8_DVS_DONE,
	/* INT_STAT_3 IRQs */
	BD71851_INT_BUCK1_OCP,
	BD71851_INT_BUCK2_OCP,
	BD71851_INT_BUCK3_OCP,
	BD71851_INT_BUCK4_OCP,
	BD71851_INT_BUCK5_OCP,
	BD71851_INT_BUCK6_OCP,
	BD71851_INT_BUCK7_OCP,
	BD71851_INT_BUCK8_OCP,

	/* INT_STAT_4 IRQs, power-button, WDG and reset */
	BD71851_INT_PBTN_LONG_PRESS,
	BD71851_INT_PBTN_MID_PRESS,
	/*
	 * The SHORT_PUSH is generated when button is first pressed (longer
	 * than configured time limit), and then released before the MID_PRESS
	 * time limit. The SHORT_PRESS is generated immediately when button is
	 * pressed for longer than configured limit, whether it is released or
	 * not.
	 */
	BD71851_INT_PBTN_SHORT_PUSH,
	BD71851_INT_PBTN_SHORT_PRESS,
	BD71851_INT_WDG,
	BD71851_INT_SWRESET,
	BD71851_INT_SEQ_DONE,

	/* INT_STAT_5 IRQs, GPIO */
	BD71851_INT_GPIO1,
	BD71851_INT_GPIO2,
	BD71851_INT_GPIO3,
	BD71851_INT_GPIO4,
};

/* BD71851 registers */
enum {
	BD71851_REG_PRODUCT_ID	= 0x0,
	BD71851_REG_MANUFACTURER_ID,
	BD71851_REG_REVISION,
	BD71851_REG_NVMVERSION,
	BD71851_REG_POR_REASON,
	BD71851_REG_RESET_REASON1,
	BD71851_REG_RESET_REASON2,
	BD71851_REG_RESET_REASON3,
	BD71851_REG_POW_STATE,
	BD71851_REG_WRST_SEL,
	BD71851_REG_PS_CTRL_1,
	BD71851_REG_PS_CTRL_2,
	BD71851_REG_RCVCFG,
	BD71851_REG_RCVNUM,
	BD71851_REG_CRDCFG, /* 0x0f, followed by undocumented reg */

	BD71851_REG_BUCK1_ON = 0x11,
	BD71851_REG_BUCK1_MODE,
	BD71851_REG_BUCK1_VOLT_RUN,
	BD71851_REG_BUCK1_VOLT_IDLE,
	BD71851_REG_BUCK1_VOLT_SUSP, /* 0x15, followed by undocumented reg */

	BD71851_REG_BUCK2_ON = 0x17,
	BD71851_REG_BUCK2_MODE,
	BD71851_REG_BUCK2_VOLT_RUN,
	BD71851_REG_BUCK2_VOLT_IDLE,
	BD71851_REG_BUCK2_VOLT_SUSP, /* 0x1b */

	BD71851_REG_BUCK3_ON = 0x1d,
	BD71851_REG_BUCK3_MODE,
	BD71851_REG_BUCK3_VOLT_RUN,
	BD71851_REG_BUCK3_VOLT_IDLE,
	BD71851_REG_BUCK3_VOLT_SUSP, /* 0x21 */

	BD71851_REG_BUCK4_ON = 0x23,
	BD71851_REG_BUCK4_MODE,
	BD71851_REG_BUCK4_VOLT_RUN,
	BD71851_REG_BUCK4_VOLT_IDLE,
	BD71851_REG_BUCK4_VOLT_SUSP, /* 0x27 */

	BD71851_REG_BUCK5_ON = 0x29,
	BD71851_REG_BUCK5_MODE,
	BD71851_REG_BUCK5_VOLT_RUN,
	BD71851_REG_BUCK5_VOLT_IDLE,
	BD71851_REG_BUCK5_VOLT_SUSP, /* 0x2d */

	BD71851_REG_BUCK6_ON = 0x2f,
	BD71851_REG_BUCK6_MODE,
	BD71851_REG_BUCK6_VOLT_RUN,
	BD71851_REG_BUCK6_VOLT_IDLE,
	BD71851_REG_BUCK6_VOLT_SUSP, /* 0x33 */

	BD71851_REG_BUCK7_ON = 0x35,
	BD71851_REG_BUCK7_MODE,
	BD71851_REG_BUCK7_VOLT_RUN,
	BD71851_REG_BUCK7_VOLT_IDLE,
	BD71851_REG_BUCK7_VOLT_SUSP, /* 0x39 */

	BD71851_REG_BUCK8_ON = 0x3b,
	BD71851_REG_BUCK8_MODE,
	BD71851_REG_BUCK8_VOLT_RUN,
	BD71851_REG_BUCK8_VOLT_IDLE,
	BD71851_REG_BUCK8_VOLT_SUSP, /* 0x3f */

	BD71851_REG_LDO1_ON = 0x41,
	BD71851_REG_LDO1_VOLT,
	BD71851_REG_LDO1_MODE,
	BD71851_REG_LDO2_ON,
	BD71851_REG_LDO2_VOLT,
	BD71851_REG_LDO2_MODE,
	BD71851_REG_LDO3_ON,
	BD71851_REG_LDO3_VOLT,
	BD71851_REG_LDO3_MODE,
	BD71851_REG_LDO4_ON,
	BD71851_REG_LDO4_VOLT,
	BD71851_REG_LDO4_MODE, /* 0x4c */

	BD71851_REG_GPO_OUT = 0x4e,
	BD71851_REG_OUT32K = 0x50,
	BD71851_REG_RTC_SEC,
	BD71851_REG_RTC_MIN,
	BD71851_REG_RTC_HOUR,
	BD71851_REG_RTC_WEEK,
	BD71851_REG_RTC_DAY,
	BD71851_REG_RTC_MONTH,
	BD71851_REG_RTC_YEAR,
	BD71851_REG_RTC_ALM0_SEC,
	BD71851_REG_RTC_ALM0_MIN,
	BD71851_REG_RTC_ALM0_HOUR,
	BD71851_REG_RTC_ALM0_WEEK,
	BD71851_REG_RTC_ALM0_DAY,
	BD71851_REG_RTC_ALM0_MONTH,
	BD71851_REG_RTC_ALM0_YEAR,
	BD71851_REG_RTC_ALM1_SEC,
	BD71851_REG_RTC_ALM1_MIN,
	BD71851_REG_RTC_ALM1_HOUR,
	BD71851_REG_RTC_ALM1_WEEK,
	BD71851_REG_RTC_ALM1_DAY,
	BD71851_REG_RTC_ALM1_MONTH,
	BD71851_REG_RTC_ALM1_YEAR,
	BD71851_REG_RTC_ALM2,
	BD71851_REG_RTC_CONF, /* 0x69 */

	BD71851_REG_ADC_CTRL_1 = 0x6b,
	BD71851_REG_ADC_CTRL_2,
	BD71851_REG_ADC_ACCUM_NUM2,
	BD71851_REG_ADC_ACCUM_NUM1,
	BD71851_REG_ADC_ACCUM_NUM0,
	BD71851_REG_ADC_ACCUM_KICK,
	BD71851_REG_ADC_ACCUM_CNT2,
	BD71851_REG_ADC_ACCUM_CNT1,
	BD71851_REG_ADC_ACCUM_CNT0,
	BD71851_REG_ADC_ACCUM_VAL2,
	BD71851_REG_ADC_ACCUM_VAL1,
	BD71851_REG_ADC_ACCUM_VAL0,
	BD71851_REG_ADC_VOL_VAL1,
	BD71851_REG_ADC_VOL_VAL0,
	BD71851_REG_ADC_CUR_VAL1,
	BD71851_REG_ADC_CUR_VAL0,
	BD71851_REG_ADC_POW_VAL1,
	BD71851_REG_ADC_POW_VAL0,
	BD71851_REG_ADC_TEMP_VAL1,
	BD71851_REG_ADC_TEMP_VAL0,
	BD71851_REG_ADC_ACCUM_VAL_INT_TH4,
	BD71851_REG_ADC_ACCUM_VAL_INT_TH3,
	BD71851_REG_ADC_ACCUM_VAL_INT_TH2,
	BD71851_REG_ADC_ACCUM_VAL_INT_TH1,
	BD71851_REG_ADC_ACCUM_VAL_INT_TH0,
	BD71851_REG_ADC_WARN_TEMP_INT_TH1,
	BD71851_REG_ADC_WARN_TEMP_INT_TH0,
	BD71851_REG_ADC_POW_VAL_INT_TH1,
	BD71851_REG_ADC_POW_VAL_INT_TH0, /* 0x89 */

	BD71851_REG_PBTN_CONF = 0x8b,

	BD71851_REG_INT_MAIN_EN = 0x8f,
	BD71851_REG_INT_1_EN,
	BD71851_REG_INT_2_EN,
	BD71851_REG_INT_3_EN,
	BD71851_REG_INT_4_EN,
	BD71851_REG_INT_5_EN, /* 0x94 */

	BD71851_REG_INT_MAIN_STAT = 0x96,
	BD71851_REG_INT_1_STAT,
	BD71851_REG_INT_2_STAT,
	BD71851_REG_INT_3_STAT,
	BD71851_REG_INT_4_STAT,
	BD71851_REG_INT_5_STAT, /* 0x9b */

	BD71851_REG_INT_MAIN_SRC = 0x9d,
	BD71851_REG_INT_1_SRC,
	BD71851_REG_INT_2_SRC,
	BD71851_REG_INT_3_SRC,
	BD71851_REG_INT_4_SRC,
	BD71851_REG_INT_5_SRC, /* 0xa2 */

	BD71851_REG_RST_MASK = 0xaf,
	BD71851_MAX_REGISTER,
};

#define BD71851_REG_RTC_START			BD71851_REG_RTC_SEC
#define BD71851_REG_RTC_ALM_START		BD71851_REG_RTC_ALM0_SEC

/* BD71851 IRQ register masks */

#define BD71851_INT_ADC_ACCUM_DONE_MASK		BIT(0)
#define BD71851_INT_ADC_ACCUM_OVF_MASK		BIT(1)
#define BD71851_INT_ADC_ACCUM_VAL_MASK		BIT(2)
#define BD71851_INT_ADC_ACCUM_TW_MASK		BIT(3)
#define BD71851_INT_ADC_POW_VAL_MASK		BIT(4)
#define BD71851_INT_RTC0_MASK			BIT(5)
#define BD71851_INT_RTC1_MASK			BIT(6)
#define BD71851_INT_RTC2_MASK			BIT(7)
#define BD71851_INT_BUCK1_DVS_DONE_MASK		BIT(0)
#define BD71851_INT_BUCK2_DVS_DONE_MASK		BIT(1)
#define BD71851_INT_BUCK3_DVS_DONE_MASK		BIT(2)
#define BD71851_INT_BUCK4_DVS_DONE_MASK		BIT(3)
#define BD71851_INT_BUCK5_DVS_DONE_MASK		BIT(4)
#define BD71851_INT_BUCK6_DVS_DONE_MASK		BIT(5)
#define BD71851_INT_BUCK7_DVS_DONE_MASK		BIT(6)
#define BD71851_INT_BUCK8_DVS_DONE_MASK		BIT(7)
#define BD71851_INT_BUCK1_OCP_MASK		BIT(0)
#define BD71851_INT_BUCK2_OCP_MASK		BIT(1)
#define BD71851_INT_BUCK3_OCP_MASK		BIT(2)
#define BD71851_INT_BUCK4_OCP_MASK		BIT(3)
#define BD71851_INT_BUCK5_OCP_MASK		BIT(4)
#define BD71851_INT_BUCK6_OCP_MASK		BIT(5)
#define BD71851_INT_BUCK7_OCP_MASK		BIT(6)
#define BD71851_INT_BUCK8_OCP_MASK		BIT(7)
#define BD71851_INT_PBTN_LONG_PRESS_MASK	BIT(0)
#define BD71851_INT_PBTN_MID_PRESS_MASK		BIT(1)
#define BD71851_INT_PBTN_SHORT_PUSH_MASK	BIT(2)
#define BD71851_INT_PBTN_SHORT_PRESS_MASK	BIT(3)
#define BD71851_INT_WDG_MASK			BIT(4)
#define BD71851_INT_SWRESET_MASK		BIT(5)
#define BD71851_INT_SEQ_DONE_MASK		BIT(6)
#define BD71851_INT_GPIO1_MASK			BIT(0)
#define BD71851_INT_GPIO2_MASK			BIT(1)
#define BD71851_INT_GPIO3_MASK			BIT(2)
#define BD71851_INT_GPIO4_MASK			BIT(3)

#endif /* _MFD_BD71851_H */

